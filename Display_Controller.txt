--- component declaration

component Display_Controller
	port ( 	clk : in STD_LOGIC;
		rst : in STD_LOGIC;

		opcode : in opcode_type := OP_HAL;
		opcode_bits : in STD_LOGIC_VECTOR ((opcode_width - 1) downto 0) := (others => '0');
		opcode_bits_en : in STD_LOGIC;

	 	operand_1 : in STD_LOGIC_VECTOR ((data_width - 1) downto 0);
	 	operand_2 : in STD_LOGIC_VECTOR ((data_width - 1) downto 0);

	 	result : in STD_LOGIC_VECTOR ((data_width - 1) downto 0);

		-- seg_bits encoding:
		-- A_B_C_D_E_F_G_DP; 0 is on, 1 is off
		seg_bits : out  STD_LOGIC_VECTOR (0 to 7);

		seg_an : out  STD_LOGIC_VECTOR (3 downto 0)
	     );
end component;


--- component instantiation with opcode_type as input

Display_Controller_inst : Display_Controller
	port map (clk, rst_disp, opcode_internal, open, '0', operand_1_internal, operand_2_internal, result_internal, seg_bits, seg_an);


--- component instantiation with opcode_bits as input

Display_Controller_inst : Display_Controller
	port map (clk, rst_disp, open, opcode_bits_internal, '1', operand_1_internal, operand_2_internal, result_internal, seg_bits, seg_an);
